[
 {
  "case": "nop",
  "regex": "^\\s*nop\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld bc,**",
  "regex": "^\\s*ld\\s+bc\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "ld (bc),a",
  "regex": "^\\s*ld\\s+\\(bc\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "inc bc",
  "regex": "^\\s*inc\\s+bc\\s*(;.*)?$",
  "cycles": "6",
  "w": 1
 },
 {
  "case": "inc b",
  "regex": "^\\s*inc\\s+b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "dec b",
  "regex": "^\\s*dec\\s+b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld b,*",
  "regex": "^\\s*ld\\s+b\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "rlca",
  "regex": "^\\s*rlca\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ex af,af'",
  "regex": "^\\s*ex\\s+af\\s*,\\s*af'\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add hl,bc",
  "regex": "^\\s*add\\s+hl\\s*,\\s*bc\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "ld a,(bc)",
  "regex": "^\\s*ld\\s+a\\s*,\\s*\\(bc\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "dec bc",
  "regex": "^\\s*dec\\s+bc\\s*(;.*)?$",
  "cycles": "6",
  "w": 1
 },
 {
  "case": "inc c",
  "regex": "^\\s*inc\\s+c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "dec c",
  "regex": "^\\s*dec\\s+c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld c,*",
  "regex": "^\\s*ld\\s+c\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "rrca",
  "regex": "^\\s*rrca\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "djnz *",
  "regex": "^\\s*djnz\\s+[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "13/8",
  "w": 2
 },
 {
  "case": "ld de,**",
  "regex": "^\\s*ld\\s+de\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "ld (de),a",
  "regex": "^\\s*ld\\s+\\(de\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "inc de",
  "regex": "^\\s*inc\\s+de\\s*(;.*)?$",
  "cycles": "6",
  "w": 1
 },
 {
  "case": "inc d",
  "regex": "^\\s*inc\\s+d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "dec d",
  "regex": "^\\s*dec\\s+d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld d,*",
  "regex": "^\\s*ld\\s+d\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "rla",
  "regex": "^\\s*rla\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "jr *",
  "regex": "^\\s*jr\\s+[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "12",
  "w": 2
 },
 {
  "case": "add hl,de",
  "regex": "^\\s*add\\s+hl\\s*,\\s*de\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "ld a,(de)",
  "regex": "^\\s*ld\\s+a\\s*,\\s*\\(de\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "dec de",
  "regex": "^\\s*dec\\s+de\\s*(;.*)?$",
  "cycles": "6",
  "w": 1
 },
 {
  "case": "inc e",
  "regex": "^\\s*inc\\s+e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "dec e",
  "regex": "^\\s*dec\\s+e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld e,*",
  "regex": "^\\s*ld\\s+e\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "rra",
  "regex": "^\\s*rra\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "jr nz,*",
  "regex": "^\\s*jr\\s+nz\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "12/7",
  "w": 2
 },
 {
  "case": "ld hl,**",
  "regex": "^\\s*ld\\s+hl\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "ld (**),hl",
  "regex": "^\\s*ld\\s+\\([^\\(\\),]+\\)\\s*,\\s*hl\\s*(;.*)?$",
  "cycles": "16",
  "w": 3
 },
 {
  "case": "inc hl",
  "regex": "^\\s*inc\\s+hl\\s*(;.*)?$",
  "cycles": "6",
  "w": 1
 },
 {
  "case": "inc h",
  "regex": "^\\s*inc\\s+h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "dec h",
  "regex": "^\\s*dec\\s+h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld h,*",
  "regex": "^\\s*ld\\s+h\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "daa",
  "regex": "^\\s*daa\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "jr z,*",
  "regex": "^\\s*jr\\s+z\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "12/7",
  "w": 2
 },
 {
  "case": "add hl,hl",
  "regex": "^\\s*add\\s+hl\\s*,\\s*hl\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "ld hl,(**)",
  "regex": "^\\s*ld\\s+hl\\s*,\\s*\\([^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "16",
  "w": 3
 },
 {
  "case": "dec hl",
  "regex": "^\\s*dec\\s+hl\\s*(;.*)?$",
  "cycles": "6",
  "w": 1
 },
 {
  "case": "inc l",
  "regex": "^\\s*inc\\s+l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "dec l",
  "regex": "^\\s*dec\\s+l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld l,*",
  "regex": "^\\s*ld\\s+l\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "cpl",
  "regex": "^\\s*cpl\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "jr nc,*",
  "regex": "^\\s*jr\\s+nc\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "12/7",
  "w": 2
 },
 {
  "case": "ld sp,**",
  "regex": "^\\s*ld\\s+sp\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "ld (**),a",
  "regex": "^\\s*ld\\s+\\([^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "13",
  "w": 3
 },
 {
  "case": "inc sp",
  "regex": "^\\s*inc\\s+sp\\s*(;.*)?$",
  "cycles": "6",
  "w": 1
 },
 {
  "case": "inc (hl)",
  "regex": "^\\s*inc\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "dec (hl)",
  "regex": "^\\s*dec\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "ld (hl),*",
  "regex": "^\\s*ld\\s+\\(hl\\)\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 2
 },
 {
  "case": "scf",
  "regex": "^\\s*scf\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "jr c,*",
  "regex": "^\\s*jr\\s+c\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "12/7",
  "w": 2
 },
 {
  "case": "add hl,sp",
  "regex": "^\\s*add\\s+hl\\s*,\\s*sp\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "ld a,(**)",
  "regex": "^\\s*ld\\s+a\\s*,\\s*\\([^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "13",
  "w": 3
 },
 {
  "case": "dec sp",
  "regex": "^\\s*dec\\s+sp\\s*(;.*)?$",
  "cycles": "6",
  "w": 1
 },
 {
  "case": "inc a",
  "regex": "^\\s*inc\\s+a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "dec a",
  "regex": "^\\s*dec\\s+a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld a,*",
  "regex": "^\\s*ld\\s+a\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "ccf",
  "regex": "^\\s*ccf\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld b,b",
  "regex": "^\\s*ld\\s+b\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld b,c",
  "regex": "^\\s*ld\\s+b\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld b,d",
  "regex": "^\\s*ld\\s+b\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld b,e",
  "regex": "^\\s*ld\\s+b\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld b,h",
  "regex": "^\\s*ld\\s+b\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld b,l",
  "regex": "^\\s*ld\\s+b\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld b,(hl)",
  "regex": "^\\s*ld\\s+b\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld b,a",
  "regex": "^\\s*ld\\s+b\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld c,b",
  "regex": "^\\s*ld\\s+c\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld c,c",
  "regex": "^\\s*ld\\s+c\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld c,d",
  "regex": "^\\s*ld\\s+c\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld c,e",
  "regex": "^\\s*ld\\s+c\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld c,h",
  "regex": "^\\s*ld\\s+c\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld c,l",
  "regex": "^\\s*ld\\s+c\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld c,(hl)",
  "regex": "^\\s*ld\\s+c\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld c,a",
  "regex": "^\\s*ld\\s+c\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld d,b",
  "regex": "^\\s*ld\\s+d\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld d,c",
  "regex": "^\\s*ld\\s+d\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld d,d",
  "regex": "^\\s*ld\\s+d\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld d,e",
  "regex": "^\\s*ld\\s+d\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld d,h",
  "regex": "^\\s*ld\\s+d\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld d,l",
  "regex": "^\\s*ld\\s+d\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld d,(hl)",
  "regex": "^\\s*ld\\s+d\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld d,a",
  "regex": "^\\s*ld\\s+d\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld e,b",
  "regex": "^\\s*ld\\s+e\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld e,c",
  "regex": "^\\s*ld\\s+e\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld e,d",
  "regex": "^\\s*ld\\s+e\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld e,e",
  "regex": "^\\s*ld\\s+e\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld e,h",
  "regex": "^\\s*ld\\s+e\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld e,l",
  "regex": "^\\s*ld\\s+e\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld e,(hl)",
  "regex": "^\\s*ld\\s+e\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld e,a",
  "regex": "^\\s*ld\\s+e\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld h,b",
  "regex": "^\\s*ld\\s+h\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld h,c",
  "regex": "^\\s*ld\\s+h\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld h,d",
  "regex": "^\\s*ld\\s+h\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld h,e",
  "regex": "^\\s*ld\\s+h\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld h,h",
  "regex": "^\\s*ld\\s+h\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld h,l",
  "regex": "^\\s*ld\\s+h\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld h,(hl)",
  "regex": "^\\s*ld\\s+h\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld h,a",
  "regex": "^\\s*ld\\s+h\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld l,b",
  "regex": "^\\s*ld\\s+l\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld l,c",
  "regex": "^\\s*ld\\s+l\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld l,d",
  "regex": "^\\s*ld\\s+l\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld l,e",
  "regex": "^\\s*ld\\s+l\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld l,h",
  "regex": "^\\s*ld\\s+l\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld l,l",
  "regex": "^\\s*ld\\s+l\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld l,(hl)",
  "regex": "^\\s*ld\\s+l\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld l,a",
  "regex": "^\\s*ld\\s+l\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld (hl),b",
  "regex": "^\\s*ld\\s+\\(hl\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld (hl),c",
  "regex": "^\\s*ld\\s+\\(hl\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld (hl),d",
  "regex": "^\\s*ld\\s+\\(hl\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld (hl),e",
  "regex": "^\\s*ld\\s+\\(hl\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld (hl),h",
  "regex": "^\\s*ld\\s+\\(hl\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld (hl),l",
  "regex": "^\\s*ld\\s+\\(hl\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "halt",
  "regex": "^\\s*halt\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld (hl),a",
  "regex": "^\\s*ld\\s+\\(hl\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld a,b",
  "regex": "^\\s*ld\\s+a\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld b",
  "regex": "^\\s*ld\\s+b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld a,c",
  "regex": "^\\s*ld\\s+a\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld c",
  "regex": "^\\s*ld\\s+c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld a,d",
  "regex": "^\\s*ld\\s+a\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld d",
  "regex": "^\\s*ld\\s+d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld a,e",
  "regex": "^\\s*ld\\s+a\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld e",
  "regex": "^\\s*ld\\s+e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld a,h",
  "regex": "^\\s*ld\\s+a\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld h",
  "regex": "^\\s*ld\\s+h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld a,l",
  "regex": "^\\s*ld\\s+a\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld l",
  "regex": "^\\s*ld\\s+l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld a,(hl)",
  "regex": "^\\s*ld\\s+a\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "ld a,a",
  "regex": "^\\s*ld\\s+a\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ld a",
  "regex": "^\\s*ld\\s+a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add a,b",
  "regex": "^\\s*add\\s+a\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add b",
  "regex": "^\\s*add\\s+b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add a,c",
  "regex": "^\\s*add\\s+a\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add c",
  "regex": "^\\s*add\\s+c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add a,d",
  "regex": "^\\s*add\\s+a\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add d",
  "regex": "^\\s*add\\s+d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add a,e",
  "regex": "^\\s*add\\s+a\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add e",
  "regex": "^\\s*add\\s+e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add a,h",
  "regex": "^\\s*add\\s+a\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add h",
  "regex": "^\\s*add\\s+h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add a,l",
  "regex": "^\\s*add\\s+a\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add l",
  "regex": "^\\s*add\\s+l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add a,(hl)",
  "regex": "^\\s*add\\s+a\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "add a,a",
  "regex": "^\\s*add\\s+a\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "add a",
  "regex": "^\\s*add\\s+a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc a,b",
  "regex": "^\\s*adc\\s+a\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc b",
  "regex": "^\\s*adc\\s+b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc a,c",
  "regex": "^\\s*adc\\s+a\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc c",
  "regex": "^\\s*adc\\s+c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc a,d",
  "regex": "^\\s*adc\\s+a\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc d",
  "regex": "^\\s*adc\\s+d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc a,e",
  "regex": "^\\s*adc\\s+a\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc e",
  "regex": "^\\s*adc\\s+e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc a,h",
  "regex": "^\\s*adc\\s+a\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc h",
  "regex": "^\\s*adc\\s+h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc a,l",
  "regex": "^\\s*adc\\s+a\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc l",
  "regex": "^\\s*adc\\s+l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc a,(hl)",
  "regex": "^\\s*adc\\s+a\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "adc a,a",
  "regex": "^\\s*adc\\s+a\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "adc a",
  "regex": "^\\s*adc\\s+a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sub b",
  "regex": "^\\s*sub\\s+b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sub c",
  "regex": "^\\s*sub\\s+c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sub d",
  "regex": "^\\s*sub\\s+d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sub e",
  "regex": "^\\s*sub\\s+e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sub h",
  "regex": "^\\s*sub\\s+h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sub l",
  "regex": "^\\s*sub\\s+l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sub (hl)",
  "regex": "^\\s*sub\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "sub a",
  "regex": "^\\s*sub\\s+a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc a,b",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc b",
  "regex": "^\\s*sbc\\s+b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc a,c",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc c",
  "regex": "^\\s*sbc\\s+c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc a,d",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc d",
  "regex": "^\\s*sbc\\s+d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc a,e",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc e",
  "regex": "^\\s*sbc\\s+e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc a,h",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc h",
  "regex": "^\\s*sbc\\s+h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc a,l",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc l",
  "regex": "^\\s*sbc\\s+l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc a,(hl)",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "sbc a,a",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "sbc a",
  "regex": "^\\s*sbc\\s+a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "and b",
  "regex": "^\\s*and\\s+b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "and c",
  "regex": "^\\s*and\\s+c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "and d",
  "regex": "^\\s*and\\s+d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "and e",
  "regex": "^\\s*and\\s+e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "and h",
  "regex": "^\\s*and\\s+h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "and l",
  "regex": "^\\s*and\\s+l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "and (hl)",
  "regex": "^\\s*and\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "and a",
  "regex": "^\\s*and\\s+a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "xor b",
  "regex": "^\\s*xor\\s+b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "xor c",
  "regex": "^\\s*xor\\s+c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "xor d",
  "regex": "^\\s*xor\\s+d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "xor e",
  "regex": "^\\s*xor\\s+e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "xor h",
  "regex": "^\\s*xor\\s+h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "xor l",
  "regex": "^\\s*xor\\s+l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "xor (hl)",
  "regex": "^\\s*xor\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "xor a",
  "regex": "^\\s*xor\\s+a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "or b",
  "regex": "^\\s*or\\s+b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "or c",
  "regex": "^\\s*or\\s+c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "or d",
  "regex": "^\\s*or\\s+d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "or e",
  "regex": "^\\s*or\\s+e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "or h",
  "regex": "^\\s*or\\s+h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "or l",
  "regex": "^\\s*or\\s+l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "or (hl)",
  "regex": "^\\s*or\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "or a",
  "regex": "^\\s*or\\s+a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "cp b",
  "regex": "^\\s*cp\\s+b\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "cp c",
  "regex": "^\\s*cp\\s+c\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "cp d",
  "regex": "^\\s*cp\\s+d\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "cp e",
  "regex": "^\\s*cp\\s+e\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "cp h",
  "regex": "^\\s*cp\\s+h\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "cp l",
  "regex": "^\\s*cp\\s+l\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "cp (hl)",
  "regex": "^\\s*cp\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "7",
  "w": 1
 },
 {
  "case": "cp a",
  "regex": "^\\s*cp\\s+a\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "ret nz",
  "regex": "^\\s*ret\\s+nz\\s*(;.*)?$",
  "cycles": "11/5",
  "w": 1
 },
 {
  "case": "pop bc",
  "regex": "^\\s*pop\\s+bc\\s*(;.*)?$",
  "cycles": "10",
  "w": 1
 },
 {
  "case": "jp nz,**",
  "regex": "^\\s*jp\\s+nz\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "jp **",
  "regex": "^\\s*jp\\s+[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "call nz,**",
  "regex": "^\\s*call\\s+nz\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "17/10",
  "w": 3
 },
 {
  "case": "push bc",
  "regex": "^\\s*push\\s+bc\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "add a,*",
  "regex": "^\\s*add\\s+a\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "rst 00h",
  "regex": "^\\s*rst\\s+00h\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "ret z",
  "regex": "^\\s*ret\\s+z\\s*(;.*)?$",
  "cycles": "11/5",
  "w": 1
 },
 {
  "case": "ret",
  "regex": "^\\s*ret\\s*(;.*)?$",
  "cycles": "10",
  "w": 1
 },
 {
  "case": "jp z,**",
  "regex": "^\\s*jp\\s+z\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "call z,**",
  "regex": "^\\s*call\\s+z\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "17/10",
  "w": 3
 },
 {
  "case": "call **",
  "regex": "^\\s*call\\s+[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "17",
  "w": 3
 },
 {
  "case": "adc a,*",
  "regex": "^\\s*adc\\s+a\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "rst 08h",
  "regex": "^\\s*rst\\s+08h\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "ret nc",
  "regex": "^\\s*ret\\s+nc\\s*(;.*)?$",
  "cycles": "11/5",
  "w": 1
 },
 {
  "case": "pop de",
  "regex": "^\\s*pop\\s+de\\s*(;.*)?$",
  "cycles": "10",
  "w": 1
 },
 {
  "case": "jp nc,**",
  "regex": "^\\s*jp\\s+nc\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "out (*),a",
  "regex": "^\\s*out\\s+\\([^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "11",
  "w": 2
 },
 {
  "case": "call nc,**",
  "regex": "^\\s*call\\s+nc\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "17/10",
  "w": 3
 },
 {
  "case": "push de",
  "regex": "^\\s*push\\s+de\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "sub *",
  "regex": "^\\s*sub\\s+[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "rst 10h",
  "regex": "^\\s*rst\\s+10h\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "ret c",
  "regex": "^\\s*ret\\s+c\\s*(;.*)?$",
  "cycles": "11/5",
  "w": 1
 },
 {
  "case": "exx",
  "regex": "^\\s*exx\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "jp c,**",
  "regex": "^\\s*jp\\s+c\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "in a,(*)",
  "regex": "^\\s*in\\s+a\\s*,\\s*\\([^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "11",
  "w": 2
 },
 {
  "case": "call c,**",
  "regex": "^\\s*call\\s+c\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "17/10",
  "w": 3
 },
 {
  "case": "sbc a,*",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "rst 18h",
  "regex": "^\\s*rst\\s+18h\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "ret po",
  "regex": "^\\s*ret\\s+po\\s*(;.*)?$",
  "cycles": "11/5",
  "w": 1
 },
 {
  "case": "pop hl",
  "regex": "^\\s*pop\\s+hl\\s*(;.*)?$",
  "cycles": "10",
  "w": 1
 },
 {
  "case": "jp po,**",
  "regex": "^\\s*jp\\s+po\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "ex (sp),hl",
  "regex": "^\\s*ex\\s+\\(sp\\)\\s*,\\s*hl\\s*(;.*)?$",
  "cycles": "19",
  "w": 1
 },
 {
  "case": "call po,**",
  "regex": "^\\s*call\\s+po\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "17/10",
  "w": 3
 },
 {
  "case": "push hl",
  "regex": "^\\s*push\\s+hl\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "and *",
  "regex": "^\\s*and\\s+[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "rst 20h",
  "regex": "^\\s*rst\\s+20h\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "ret pe",
  "regex": "^\\s*ret\\s+pe\\s*(;.*)?$",
  "cycles": "11/5",
  "w": 1
 },
 {
  "case": "jp (hl)",
  "regex": "^\\s*jp\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "jp pe,**",
  "regex": "^\\s*jp\\s+pe\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "ex de,hl",
  "regex": "^\\s*ex\\s+de\\s*,\\s*hl\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "call pe,**",
  "regex": "^\\s*call\\s+pe\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "17/10",
  "w": 3
 },
 {
  "case": "xor *",
  "regex": "^\\s*xor\\s+[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "rst 28h",
  "regex": "^\\s*rst\\s+28h\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "ret p",
  "regex": "^\\s*ret\\s+p\\s*(;.*)?$",
  "cycles": "11/5",
  "w": 1
 },
 {
  "case": "pop af",
  "regex": "^\\s*pop\\s+af\\s*(;.*)?$",
  "cycles": "10",
  "w": 1
 },
 {
  "case": "jp p,**",
  "regex": "^\\s*jp\\s+p\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "di",
  "regex": "^\\s*di\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "call p,**",
  "regex": "^\\s*call\\s+p\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "17/10",
  "w": 3
 },
 {
  "case": "push af",
  "regex": "^\\s*push\\s+af\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "or *",
  "regex": "^\\s*or\\s+[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "rst 30h",
  "regex": "^\\s*rst\\s+30h\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "ret m",
  "regex": "^\\s*ret\\s+m\\s*(;.*)?$",
  "cycles": "11/5",
  "w": 1
 },
 {
  "case": "ld sp,hl",
  "regex": "^\\s*ld\\s+sp\\s*,\\s*hl\\s*(;.*)?$",
  "cycles": "6",
  "w": 1
 },
 {
  "case": "jp m,**",
  "regex": "^\\s*jp\\s+m\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "10",
  "w": 3
 },
 {
  "case": "ei",
  "regex": "^\\s*ei\\s*(;.*)?$",
  "cycles": "4",
  "w": 1
 },
 {
  "case": "call m,**",
  "regex": "^\\s*call\\s+m\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "17/10",
  "w": 3
 },
 {
  "case": "cp *",
  "regex": "^\\s*cp\\s+[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "7",
  "w": 2
 },
 {
  "case": "rst 38h",
  "regex": "^\\s*rst\\s+38h\\s*(;.*)?$",
  "cycles": "11",
  "w": 1
 },
 {
  "case": "in b,(c)",
  "regex": "^\\s*in\\s+b\\s*,\\s*\\(c\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "out (c),b",
  "regex": "^\\s*out\\s+\\(c\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "sbc hl,bc",
  "regex": "^\\s*sbc\\s+hl\\s*,\\s*bc\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld (**),bc",
  "regex": "^\\s*ld\\s+\\([^\\(\\),]+\\)\\s*,\\s*bc\\s*(;.*)?$",
  "cycles": "20",
  "w": 3
 },
 {
  "case": "neg",
  "regex": "^\\s*neg\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "retn",
  "regex": "^\\s*retn\\s*(;.*)?$",
  "cycles": "14",
  "w": 1
 },
 {
  "case": "im 0",
  "regex": "^\\s*im\\s+0\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld i,a",
  "regex": "^\\s*ld\\s+i\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "9",
  "w": 1
 },
 {
  "case": "in c,(c)",
  "regex": "^\\s*in\\s+c\\s*,\\s*\\(c\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "out (c),c",
  "regex": "^\\s*out\\s+\\(c\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "adc hl,bc",
  "regex": "^\\s*adc\\s+hl\\s*,\\s*bc\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld bc,(**)",
  "regex": "^\\s*ld\\s+bc\\s*,\\s*\\([^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 3
 },
 {
  "case": "neg",
  "regex": "^\\s*neg\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "reti",
  "regex": "^\\s*reti\\s*(;.*)?$",
  "cycles": "14",
  "w": 1
 },
 {
  "case": "im 0/1",
  "regex": "^\\s*im\\s+0/1\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld r,a",
  "regex": "^\\s*ld\\s+r\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "9",
  "w": 1
 },
 {
  "case": "in d,(c)",
  "regex": "^\\s*in\\s+d\\s*,\\s*\\(c\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "out (c),d",
  "regex": "^\\s*out\\s+\\(c\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "sbc hl,de",
  "regex": "^\\s*sbc\\s+hl\\s*,\\s*de\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld (**),de",
  "regex": "^\\s*ld\\s+\\([^\\(\\),]+\\)\\s*,\\s*de\\s*(;.*)?$",
  "cycles": "20",
  "w": 3
 },
 {
  "case": "neg",
  "regex": "^\\s*neg\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "retn",
  "regex": "^\\s*retn\\s*(;.*)?$",
  "cycles": "14",
  "w": 1
 },
 {
  "case": "im 1",
  "regex": "^\\s*im\\s+1\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld a,i",
  "regex": "^\\s*ld\\s+a\\s*,\\s*i\\s*(;.*)?$",
  "cycles": "9",
  "w": 1
 },
 {
  "case": "in e,(c)",
  "regex": "^\\s*in\\s+e\\s*,\\s*\\(c\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "out (c),e",
  "regex": "^\\s*out\\s+\\(c\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "adc hl,de",
  "regex": "^\\s*adc\\s+hl\\s*,\\s*de\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld de,(**)",
  "regex": "^\\s*ld\\s+de\\s*,\\s*\\([^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 3
 },
 {
  "case": "neg",
  "regex": "^\\s*neg\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "retn",
  "regex": "^\\s*retn\\s*(;.*)?$",
  "cycles": "14",
  "w": 1
 },
 {
  "case": "im 2",
  "regex": "^\\s*im\\s+2\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld a,r",
  "regex": "^\\s*ld\\s+a\\s*,\\s*r\\s*(;.*)?$",
  "cycles": "9",
  "w": 1
 },
 {
  "case": "in h,(c)",
  "regex": "^\\s*in\\s+h\\s*,\\s*\\(c\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "out (c),h",
  "regex": "^\\s*out\\s+\\(c\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "sbc hl,hl",
  "regex": "^\\s*sbc\\s+hl\\s*,\\s*hl\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld (**),hl",
  "regex": "^\\s*ld\\s+\\([^\\(\\),]+\\)\\s*,\\s*hl\\s*(;.*)?$",
  "cycles": "20",
  "w": 3
 },
 {
  "case": "neg",
  "regex": "^\\s*neg\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "retn",
  "regex": "^\\s*retn\\s*(;.*)?$",
  "cycles": "14",
  "w": 1
 },
 {
  "case": "im 0",
  "regex": "^\\s*im\\s+0\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rrd",
  "regex": "^\\s*rrd\\s*(;.*)?$",
  "cycles": "18",
  "w": 1
 },
 {
  "case": "in l,(c)",
  "regex": "^\\s*in\\s+l\\s*,\\s*\\(c\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "out (c),l",
  "regex": "^\\s*out\\s+\\(c\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "adc hl,hl",
  "regex": "^\\s*adc\\s+hl\\s*,\\s*hl\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld hl,(**)",
  "regex": "^\\s*ld\\s+hl\\s*,\\s*\\([^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 3
 },
 {
  "case": "neg",
  "regex": "^\\s*neg\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "retn",
  "regex": "^\\s*retn\\s*(;.*)?$",
  "cycles": "14",
  "w": 1
 },
 {
  "case": "im 0/1",
  "regex": "^\\s*im\\s+0/1\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rld",
  "regex": "^\\s*rld\\s*(;.*)?$",
  "cycles": "18",
  "w": 1
 },
 {
  "case": "in (c)",
  "regex": "^\\s*in\\s+\\(c\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "out (c),0",
  "regex": "^\\s*out\\s+\\(c\\)\\s*,\\s*0\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "sbc hl,sp",
  "regex": "^\\s*sbc\\s+hl\\s*,\\s*sp\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld (**),sp",
  "regex": "^\\s*ld\\s+\\([^\\(\\),]+\\)\\s*,\\s*sp\\s*(;.*)?$",
  "cycles": "20",
  "w": 3
 },
 {
  "case": "neg",
  "regex": "^\\s*neg\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "retn",
  "regex": "^\\s*retn\\s*(;.*)?$",
  "cycles": "14",
  "w": 1
 },
 {
  "case": "im 1",
  "regex": "^\\s*im\\s+1\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "in a,(c)",
  "regex": "^\\s*in\\s+a\\s*,\\s*\\(c\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "out (c),a",
  "regex": "^\\s*out\\s+\\(c\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "adc hl,sp",
  "regex": "^\\s*adc\\s+hl\\s*,\\s*sp\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld sp,(**)",
  "regex": "^\\s*ld\\s+sp\\s*,\\s*\\([^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 3
 },
 {
  "case": "neg",
  "regex": "^\\s*neg\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "retn",
  "regex": "^\\s*retn\\s*(;.*)?$",
  "cycles": "14",
  "w": 1
 },
 {
  "case": "im 2",
  "regex": "^\\s*im\\s+2\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ldi",
  "regex": "^\\s*ldi\\s*(;.*)?$",
  "cycles": "16",
  "w": 1
 },
 {
  "case": "cpi",
  "regex": "^\\s*cpi\\s*(;.*)?$",
  "cycles": "16",
  "w": 1
 },
 {
  "case": "ini",
  "regex": "^\\s*ini\\s*(;.*)?$",
  "cycles": "16",
  "w": 1
 },
 {
  "case": "outi",
  "regex": "^\\s*outi\\s*(;.*)?$",
  "cycles": "16",
  "w": 1
 },
 {
  "case": "ldd",
  "regex": "^\\s*ldd\\s*(;.*)?$",
  "cycles": "16",
  "w": 1
 },
 {
  "case": "cpd",
  "regex": "^\\s*cpd\\s*(;.*)?$",
  "cycles": "16",
  "w": 1
 },
 {
  "case": "ind",
  "regex": "^\\s*ind\\s*(;.*)?$",
  "cycles": "16",
  "w": 1
 },
 {
  "case": "outd",
  "regex": "^\\s*outd\\s*(;.*)?$",
  "cycles": "16",
  "w": 1
 },
 {
  "case": "ldir",
  "regex": "^\\s*ldir\\s*(;.*)?$",
  "cycles": "21/16",
  "w": 1
 },
 {
  "case": "cpir",
  "regex": "^\\s*cpir\\s*(;.*)?$",
  "cycles": "21/16",
  "w": 1
 },
 {
  "case": "inir",
  "regex": "^\\s*inir\\s*(;.*)?$",
  "cycles": "21/16",
  "w": 1
 },
 {
  "case": "otir",
  "regex": "^\\s*otir\\s*(;.*)?$",
  "cycles": "21/16",
  "w": 1
 },
 {
  "case": "lddr",
  "regex": "^\\s*lddr\\s*(;.*)?$",
  "cycles": "21/16",
  "w": 1
 },
 {
  "case": "cpdr",
  "regex": "^\\s*cpdr\\s*(;.*)?$",
  "cycles": "21/16",
  "w": 1
 },
 {
  "case": "indr",
  "regex": "^\\s*indr\\s*(;.*)?$",
  "cycles": "21/16",
  "w": 1
 },
 {
  "case": "otdr",
  "regex": "^\\s*otdr\\s*(;.*)?$",
  "cycles": "21/16",
  "w": 1
 },
 {
  "case": "rlc b",
  "regex": "^\\s*rlc\\s+b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rlc c",
  "regex": "^\\s*rlc\\s+c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rlc d",
  "regex": "^\\s*rlc\\s+d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rlc e",
  "regex": "^\\s*rlc\\s+e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rlc h",
  "regex": "^\\s*rlc\\s+h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rlc l",
  "regex": "^\\s*rlc\\s+l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rlc (hl)",
  "regex": "^\\s*rlc\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "rlc a",
  "regex": "^\\s*rlc\\s+a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rrc b",
  "regex": "^\\s*rrc\\s+b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rrc c",
  "regex": "^\\s*rrc\\s+c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rrc d",
  "regex": "^\\s*rrc\\s+d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rrc e",
  "regex": "^\\s*rrc\\s+e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rrc h",
  "regex": "^\\s*rrc\\s+h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rrc l",
  "regex": "^\\s*rrc\\s+l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rrc (hl)",
  "regex": "^\\s*rrc\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "rrc a",
  "regex": "^\\s*rrc\\s+a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rl b",
  "regex": "^\\s*rl\\s+b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rl c",
  "regex": "^\\s*rl\\s+c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rl d",
  "regex": "^\\s*rl\\s+d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rl e",
  "regex": "^\\s*rl\\s+e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rl h",
  "regex": "^\\s*rl\\s+h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rl l",
  "regex": "^\\s*rl\\s+l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rl (hl)",
  "regex": "^\\s*rl\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "rl a",
  "regex": "^\\s*rl\\s+a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rr b",
  "regex": "^\\s*rr\\s+b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rr c",
  "regex": "^\\s*rr\\s+c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rr d",
  "regex": "^\\s*rr\\s+d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rr e",
  "regex": "^\\s*rr\\s+e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rr h",
  "regex": "^\\s*rr\\s+h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rr l",
  "regex": "^\\s*rr\\s+l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "rr (hl)",
  "regex": "^\\s*rr\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "rr a",
  "regex": "^\\s*rr\\s+a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sla b",
  "regex": "^\\s*sla\\s+b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sla c",
  "regex": "^\\s*sla\\s+c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sla d",
  "regex": "^\\s*sla\\s+d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sla e",
  "regex": "^\\s*sla\\s+e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sla h",
  "regex": "^\\s*sla\\s+h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sla l",
  "regex": "^\\s*sla\\s+l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sla (hl)",
  "regex": "^\\s*sla\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "sla a",
  "regex": "^\\s*sla\\s+a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sra b",
  "regex": "^\\s*sra\\s+b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sra c",
  "regex": "^\\s*sra\\s+c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sra d",
  "regex": "^\\s*sra\\s+d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sra e",
  "regex": "^\\s*sra\\s+e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sra h",
  "regex": "^\\s*sra\\s+h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sra l",
  "regex": "^\\s*sra\\s+l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sra (hl)",
  "regex": "^\\s*sra\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "sra a",
  "regex": "^\\s*sra\\s+a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sll b",
  "regex": "^\\s*sll\\s+b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sll c",
  "regex": "^\\s*sll\\s+c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sll d",
  "regex": "^\\s*sll\\s+d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sll e",
  "regex": "^\\s*sll\\s+e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sll h",
  "regex": "^\\s*sll\\s+h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sll l",
  "regex": "^\\s*sll\\s+l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sll (hl)",
  "regex": "^\\s*sll\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "sll a",
  "regex": "^\\s*sll\\s+a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "srl b",
  "regex": "^\\s*srl\\s+b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "srl c",
  "regex": "^\\s*srl\\s+c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "srl d",
  "regex": "^\\s*srl\\s+d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "srl e",
  "regex": "^\\s*srl\\s+e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "srl h",
  "regex": "^\\s*srl\\s+h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "srl l",
  "regex": "^\\s*srl\\s+l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "srl (hl)",
  "regex": "^\\s*srl\\s+\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "srl a",
  "regex": "^\\s*srl\\s+a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 0,b",
  "regex": "^\\s*bit\\s+0\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 0,c",
  "regex": "^\\s*bit\\s+0\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 0,d",
  "regex": "^\\s*bit\\s+0\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 0,e",
  "regex": "^\\s*bit\\s+0\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 0,h",
  "regex": "^\\s*bit\\s+0\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 0,l",
  "regex": "^\\s*bit\\s+0\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 0,(hl)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "bit 0,a",
  "regex": "^\\s*bit\\s+0\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 1,b",
  "regex": "^\\s*bit\\s+1\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 1,c",
  "regex": "^\\s*bit\\s+1\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 1,d",
  "regex": "^\\s*bit\\s+1\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 1,e",
  "regex": "^\\s*bit\\s+1\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 1,h",
  "regex": "^\\s*bit\\s+1\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 1,l",
  "regex": "^\\s*bit\\s+1\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 1,(hl)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "bit 1,a",
  "regex": "^\\s*bit\\s+1\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 2,b",
  "regex": "^\\s*bit\\s+2\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 2,c",
  "regex": "^\\s*bit\\s+2\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 2,d",
  "regex": "^\\s*bit\\s+2\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 2,e",
  "regex": "^\\s*bit\\s+2\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 2,h",
  "regex": "^\\s*bit\\s+2\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 2,l",
  "regex": "^\\s*bit\\s+2\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 2,(hl)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "bit 2,a",
  "regex": "^\\s*bit\\s+2\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 3,b",
  "regex": "^\\s*bit\\s+3\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 3,c",
  "regex": "^\\s*bit\\s+3\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 3,d",
  "regex": "^\\s*bit\\s+3\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 3,e",
  "regex": "^\\s*bit\\s+3\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 3,h",
  "regex": "^\\s*bit\\s+3\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 3,l",
  "regex": "^\\s*bit\\s+3\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 3,(hl)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "bit 3,a",
  "regex": "^\\s*bit\\s+3\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 4,b",
  "regex": "^\\s*bit\\s+4\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 4,c",
  "regex": "^\\s*bit\\s+4\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 4,d",
  "regex": "^\\s*bit\\s+4\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 4,e",
  "regex": "^\\s*bit\\s+4\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 4,h",
  "regex": "^\\s*bit\\s+4\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 4,l",
  "regex": "^\\s*bit\\s+4\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 4,(hl)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "bit 4,a",
  "regex": "^\\s*bit\\s+4\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 5,b",
  "regex": "^\\s*bit\\s+5\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 5,c",
  "regex": "^\\s*bit\\s+5\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 5,d",
  "regex": "^\\s*bit\\s+5\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 5,e",
  "regex": "^\\s*bit\\s+5\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 5,h",
  "regex": "^\\s*bit\\s+5\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 5,l",
  "regex": "^\\s*bit\\s+5\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 5,(hl)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "bit 5,a",
  "regex": "^\\s*bit\\s+5\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 6,b",
  "regex": "^\\s*bit\\s+6\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 6,c",
  "regex": "^\\s*bit\\s+6\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 6,d",
  "regex": "^\\s*bit\\s+6\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 6,e",
  "regex": "^\\s*bit\\s+6\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 6,h",
  "regex": "^\\s*bit\\s+6\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 6,l",
  "regex": "^\\s*bit\\s+6\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 6,(hl)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "bit 6,a",
  "regex": "^\\s*bit\\s+6\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 7,b",
  "regex": "^\\s*bit\\s+7\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 7,c",
  "regex": "^\\s*bit\\s+7\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 7,d",
  "regex": "^\\s*bit\\s+7\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 7,e",
  "regex": "^\\s*bit\\s+7\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 7,h",
  "regex": "^\\s*bit\\s+7\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 7,l",
  "regex": "^\\s*bit\\s+7\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "bit 7,(hl)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "12",
  "w": 1
 },
 {
  "case": "bit 7,a",
  "regex": "^\\s*bit\\s+7\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 0,b",
  "regex": "^\\s*res\\s+0\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 0,c",
  "regex": "^\\s*res\\s+0\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 0,d",
  "regex": "^\\s*res\\s+0\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 0,e",
  "regex": "^\\s*res\\s+0\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 0,h",
  "regex": "^\\s*res\\s+0\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 0,l",
  "regex": "^\\s*res\\s+0\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 0,(hl)",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "res 0,a",
  "regex": "^\\s*res\\s+0\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 1,b",
  "regex": "^\\s*res\\s+1\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 1,c",
  "regex": "^\\s*res\\s+1\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 1,d",
  "regex": "^\\s*res\\s+1\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 1,e",
  "regex": "^\\s*res\\s+1\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 1,h",
  "regex": "^\\s*res\\s+1\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 1,l",
  "regex": "^\\s*res\\s+1\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 1,(hl)",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "res 1,a",
  "regex": "^\\s*res\\s+1\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 2,b",
  "regex": "^\\s*res\\s+2\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 2,c",
  "regex": "^\\s*res\\s+2\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 2,d",
  "regex": "^\\s*res\\s+2\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 2,e",
  "regex": "^\\s*res\\s+2\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 2,h",
  "regex": "^\\s*res\\s+2\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 2,l",
  "regex": "^\\s*res\\s+2\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 2,(hl)",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "res 2,a",
  "regex": "^\\s*res\\s+2\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 3,b",
  "regex": "^\\s*res\\s+3\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 3,c",
  "regex": "^\\s*res\\s+3\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 3,d",
  "regex": "^\\s*res\\s+3\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 3,e",
  "regex": "^\\s*res\\s+3\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 3,h",
  "regex": "^\\s*res\\s+3\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 3,l",
  "regex": "^\\s*res\\s+3\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 3,(hl)",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "res 3,a",
  "regex": "^\\s*res\\s+3\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 4,b",
  "regex": "^\\s*res\\s+4\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 4,c",
  "regex": "^\\s*res\\s+4\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 4,d",
  "regex": "^\\s*res\\s+4\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 4,e",
  "regex": "^\\s*res\\s+4\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 4,h",
  "regex": "^\\s*res\\s+4\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 4,l",
  "regex": "^\\s*res\\s+4\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 4,(hl)",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "res 4,a",
  "regex": "^\\s*res\\s+4\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 5,b",
  "regex": "^\\s*res\\s+5\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 5,c",
  "regex": "^\\s*res\\s+5\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 5,d",
  "regex": "^\\s*res\\s+5\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 5,e",
  "regex": "^\\s*res\\s+5\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 5,h",
  "regex": "^\\s*res\\s+5\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 5,l",
  "regex": "^\\s*res\\s+5\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 5,(hl)",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "res 5,a",
  "regex": "^\\s*res\\s+5\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 6,b",
  "regex": "^\\s*res\\s+6\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 6,c",
  "regex": "^\\s*res\\s+6\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 6,d",
  "regex": "^\\s*res\\s+6\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 6,e",
  "regex": "^\\s*res\\s+6\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 6,h",
  "regex": "^\\s*res\\s+6\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 6,l",
  "regex": "^\\s*res\\s+6\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 6,(hl)",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "res 6,a",
  "regex": "^\\s*res\\s+6\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 7,b",
  "regex": "^\\s*res\\s+7\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 7,c",
  "regex": "^\\s*res\\s+7\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 7,d",
  "regex": "^\\s*res\\s+7\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 7,e",
  "regex": "^\\s*res\\s+7\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 7,h",
  "regex": "^\\s*res\\s+7\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 7,l",
  "regex": "^\\s*res\\s+7\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "res 7,(hl)",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "res 7,a",
  "regex": "^\\s*res\\s+7\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 0,b",
  "regex": "^\\s*set\\s+0\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 0,c",
  "regex": "^\\s*set\\s+0\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 0,d",
  "regex": "^\\s*set\\s+0\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 0,e",
  "regex": "^\\s*set\\s+0\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 0,h",
  "regex": "^\\s*set\\s+0\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 0,l",
  "regex": "^\\s*set\\s+0\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 0,(hl)",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "set 0,a",
  "regex": "^\\s*set\\s+0\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 1,b",
  "regex": "^\\s*set\\s+1\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 1,c",
  "regex": "^\\s*set\\s+1\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 1,d",
  "regex": "^\\s*set\\s+1\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 1,e",
  "regex": "^\\s*set\\s+1\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 1,h",
  "regex": "^\\s*set\\s+1\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 1,l",
  "regex": "^\\s*set\\s+1\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 1,(hl)",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "set 1,a",
  "regex": "^\\s*set\\s+1\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 2,b",
  "regex": "^\\s*set\\s+2\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 2,c",
  "regex": "^\\s*set\\s+2\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 2,d",
  "regex": "^\\s*set\\s+2\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 2,e",
  "regex": "^\\s*set\\s+2\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 2,h",
  "regex": "^\\s*set\\s+2\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 2,l",
  "regex": "^\\s*set\\s+2\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 2,(hl)",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "set 2,a",
  "regex": "^\\s*set\\s+2\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 3,b",
  "regex": "^\\s*set\\s+3\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 3,c",
  "regex": "^\\s*set\\s+3\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 3,d",
  "regex": "^\\s*set\\s+3\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 3,e",
  "regex": "^\\s*set\\s+3\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 3,h",
  "regex": "^\\s*set\\s+3\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 3,l",
  "regex": "^\\s*set\\s+3\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 3,(hl)",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "set 3,a",
  "regex": "^\\s*set\\s+3\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 4,b",
  "regex": "^\\s*set\\s+4\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 4,c",
  "regex": "^\\s*set\\s+4\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 4,d",
  "regex": "^\\s*set\\s+4\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 4,e",
  "regex": "^\\s*set\\s+4\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 4,h",
  "regex": "^\\s*set\\s+4\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 4,l",
  "regex": "^\\s*set\\s+4\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 4,(hl)",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "set 4,a",
  "regex": "^\\s*set\\s+4\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 5,b",
  "regex": "^\\s*set\\s+5\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 5,c",
  "regex": "^\\s*set\\s+5\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 5,d",
  "regex": "^\\s*set\\s+5\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 5,e",
  "regex": "^\\s*set\\s+5\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 5,h",
  "regex": "^\\s*set\\s+5\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 5,l",
  "regex": "^\\s*set\\s+5\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 5,(hl)",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "set 5,a",
  "regex": "^\\s*set\\s+5\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 6,b",
  "regex": "^\\s*set\\s+6\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 6,c",
  "regex": "^\\s*set\\s+6\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 6,d",
  "regex": "^\\s*set\\s+6\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 6,e",
  "regex": "^\\s*set\\s+6\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 6,h",
  "regex": "^\\s*set\\s+6\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 6,l",
  "regex": "^\\s*set\\s+6\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 6,(hl)",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "set 6,a",
  "regex": "^\\s*set\\s+6\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 7,b",
  "regex": "^\\s*set\\s+7\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 7,c",
  "regex": "^\\s*set\\s+7\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 7,d",
  "regex": "^\\s*set\\s+7\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 7,e",
  "regex": "^\\s*set\\s+7\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 7,h",
  "regex": "^\\s*set\\s+7\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 7,l",
  "regex": "^\\s*set\\s+7\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "set 7,(hl)",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(hl\\)\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "set 7,a",
  "regex": "^\\s*set\\s+7\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "add ix,bc",
  "regex": "^\\s*add\\s+ix\\s*,\\s*bc\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "add ix,de",
  "regex": "^\\s*add\\s+ix\\s*,\\s*de\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld ix,**",
  "regex": "^\\s*ld\\s+ix\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "14",
  "w": 3
 },
 {
  "case": "ld (**),ix",
  "regex": "^\\s*ld\\s+\\([^\\(\\),]+\\)\\s*,\\s*ix\\s*(;.*)?$",
  "cycles": "20",
  "w": 3
 },
 {
  "case": "inc ix",
  "regex": "^\\s*inc\\s+ix\\s*(;.*)?$",
  "cycles": "10",
  "w": 1
 },
 {
  "case": "inc ixh",
  "regex": "^\\s*inc\\s+ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "dec ixh",
  "regex": "^\\s*dec\\s+ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixh,*",
  "regex": "^\\s*ld\\s+ixh\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "11",
  "w": 2
 },
 {
  "case": "add ix,ix",
  "regex": "^\\s*add\\s+ix\\s*,\\s*ix\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld ix,(**)",
  "regex": "^\\s*ld\\s+ix\\s*,\\s*\\([^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 3
 },
 {
  "case": "dec ix",
  "regex": "^\\s*dec\\s+ix\\s*(;.*)?$",
  "cycles": "10",
  "w": 1
 },
 {
  "case": "inc ixl",
  "regex": "^\\s*inc\\s+ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "dec ixl",
  "regex": "^\\s*dec\\s+ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixl,*",
  "regex": "^\\s*ld\\s+ixl\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "11",
  "w": 2
 },
 {
  "case": "inc (ix+*)",
  "regex": "^\\s*inc\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "dec (ix+*)",
  "regex": "^\\s*dec\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "ld (ix+*),*",
  "regex": "^\\s*ld\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "add ix,sp",
  "regex": "^\\s*add\\s+ix\\s*,\\s*sp\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld b,ixh",
  "regex": "^\\s*ld\\s+b\\s*,\\s*ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld b,ixl",
  "regex": "^\\s*ld\\s+b\\s*,\\s*ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld b,(ix+*)",
  "regex": "^\\s*ld\\s+b\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld c,ixh",
  "regex": "^\\s*ld\\s+c\\s*,\\s*ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld c,ixl",
  "regex": "^\\s*ld\\s+c\\s*,\\s*ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld c,(ix+*)",
  "regex": "^\\s*ld\\s+c\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld d,ixh",
  "regex": "^\\s*ld\\s+d\\s*,\\s*ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld d,ixl",
  "regex": "^\\s*ld\\s+d\\s*,\\s*ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld d,(ix+*)",
  "regex": "^\\s*ld\\s+d\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld e,ixh",
  "regex": "^\\s*ld\\s+e\\s*,\\s*ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld e,ixl",
  "regex": "^\\s*ld\\s+e\\s*,\\s*ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld e,(ix+*)",
  "regex": "^\\s*ld\\s+e\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld ixh,b",
  "regex": "^\\s*ld\\s+ixh\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixh,c",
  "regex": "^\\s*ld\\s+ixh\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixh,d",
  "regex": "^\\s*ld\\s+ixh\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixh,e",
  "regex": "^\\s*ld\\s+ixh\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixh,ixh",
  "regex": "^\\s*ld\\s+ixh\\s*,\\s*ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixh,ixl",
  "regex": "^\\s*ld\\s+ixh\\s*,\\s*ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld h,(ix+*)",
  "regex": "^\\s*ld\\s+h\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld ixh,a",
  "regex": "^\\s*ld\\s+ixh\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixl,b",
  "regex": "^\\s*ld\\s+ixl\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixl,c",
  "regex": "^\\s*ld\\s+ixl\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixl,d",
  "regex": "^\\s*ld\\s+ixl\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixl,e",
  "regex": "^\\s*ld\\s+ixl\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixl,ixh",
  "regex": "^\\s*ld\\s+ixl\\s*,\\s*ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld ixl,ixl",
  "regex": "^\\s*ld\\s+ixl\\s*,\\s*ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld l,(ix+*)",
  "regex": "^\\s*ld\\s+l\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld ixl,a",
  "regex": "^\\s*ld\\s+ixl\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld (ix+*),b",
  "regex": "^\\s*ld\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld (ix+*),c",
  "regex": "^\\s*ld\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld (ix+*),d",
  "regex": "^\\s*ld\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld (ix+*),e",
  "regex": "^\\s*ld\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld (ix+*),h",
  "regex": "^\\s*ld\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld (ix+*),l",
  "regex": "^\\s*ld\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld (ix+*),a",
  "regex": "^\\s*ld\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld a,ixh",
  "regex": "^\\s*ld\\s+a\\s*,\\s*ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld a,ixl",
  "regex": "^\\s*ld\\s+a\\s*,\\s*ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld a,(ix+*)",
  "regex": "^\\s*ld\\s+a\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "add a,ixh",
  "regex": "^\\s*add\\s+a\\s*,\\s*ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "add a,ixl",
  "regex": "^\\s*add\\s+a\\s*,\\s*ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "add a,(ix+*)",
  "regex": "^\\s*add\\s+a\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "adc a,ixh",
  "regex": "^\\s*adc\\s+a\\s*,\\s*ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "adc a,ixl",
  "regex": "^\\s*adc\\s+a\\s*,\\s*ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "adc a,(ix+*)",
  "regex": "^\\s*adc\\s+a\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "sub ixh",
  "regex": "^\\s*sub\\s+ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sub ixl",
  "regex": "^\\s*sub\\s+ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sub (ix+*)",
  "regex": "^\\s*sub\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "sbc a,ixh",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sbc a,ixl",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sbc a,(ix+*)",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "and ixh",
  "regex": "^\\s*and\\s+ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "and ixl",
  "regex": "^\\s*and\\s+ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "and (ix+*)",
  "regex": "^\\s*and\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "xor ixh",
  "regex": "^\\s*xor\\s+ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "xor ixl",
  "regex": "^\\s*xor\\s+ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "xor (ix+*)",
  "regex": "^\\s*xor\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "or ixh",
  "regex": "^\\s*or\\s+ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "or ixl",
  "regex": "^\\s*or\\s+ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "or (ix+*)",
  "regex": "^\\s*or\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "cp ixh",
  "regex": "^\\s*cp\\s+ixh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "cp ixl",
  "regex": "^\\s*cp\\s+ixl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "cp (ix+*)",
  "regex": "^\\s*cp\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "pop ix",
  "regex": "^\\s*pop\\s+ix\\s*(;.*)?$",
  "cycles": "14",
  "w": 1
 },
 {
  "case": "ex (sp),ix",
  "regex": "^\\s*ex\\s+\\(sp\\)\\s*,\\s*ix\\s*(;.*)?$",
  "cycles": "23",
  "w": 1
 },
 {
  "case": "push ix",
  "regex": "^\\s*push\\s+ix\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "jp (ix)",
  "regex": "^\\s*jp\\s+\\(ix\\)\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld sp,ix",
  "regex": "^\\s*ld\\s+sp\\s*,\\s*ix\\s*(;.*)?$",
  "cycles": "10",
  "w": 1
 },
 {
  "case": "rlc (ix+*),b",
  "regex": "^\\s*rlc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (ix+*),c",
  "regex": "^\\s*rlc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (ix+*),d",
  "regex": "^\\s*rlc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (ix+*),e",
  "regex": "^\\s*rlc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (ix+*),h",
  "regex": "^\\s*rlc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (ix+*),l",
  "regex": "^\\s*rlc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (ix+*)",
  "regex": "^\\s*rlc\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (ix+*),a",
  "regex": "^\\s*rlc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (ix+*),b",
  "regex": "^\\s*rrc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (ix+*),c",
  "regex": "^\\s*rrc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (ix+*),d",
  "regex": "^\\s*rrc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (ix+*),e",
  "regex": "^\\s*rrc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (ix+*),h",
  "regex": "^\\s*rrc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (ix+*),l",
  "regex": "^\\s*rrc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (ix+*)",
  "regex": "^\\s*rrc\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (ix+*),a",
  "regex": "^\\s*rrc\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (ix+*),b",
  "regex": "^\\s*rl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (ix+*),c",
  "regex": "^\\s*rl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (ix+*),d",
  "regex": "^\\s*rl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (ix+*),e",
  "regex": "^\\s*rl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (ix+*),h",
  "regex": "^\\s*rl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (ix+*),l",
  "regex": "^\\s*rl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (ix+*)",
  "regex": "^\\s*rl\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (ix+*),a",
  "regex": "^\\s*rl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (ix+*),b",
  "regex": "^\\s*rr\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (ix+*),c",
  "regex": "^\\s*rr\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (ix+*),d",
  "regex": "^\\s*rr\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (ix+*),e",
  "regex": "^\\s*rr\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (ix+*),h",
  "regex": "^\\s*rr\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (ix+*),l",
  "regex": "^\\s*rr\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (ix+*)",
  "regex": "^\\s*rr\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (ix+*),a",
  "regex": "^\\s*rr\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (ix+*),b",
  "regex": "^\\s*sla\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (ix+*),c",
  "regex": "^\\s*sla\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (ix+*),d",
  "regex": "^\\s*sla\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (ix+*),e",
  "regex": "^\\s*sla\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (ix+*),h",
  "regex": "^\\s*sla\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (ix+*),l",
  "regex": "^\\s*sla\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (ix+*)",
  "regex": "^\\s*sla\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (ix+*),a",
  "regex": "^\\s*sla\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (ix+*),b",
  "regex": "^\\s*sra\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (ix+*),c",
  "regex": "^\\s*sra\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (ix+*),d",
  "regex": "^\\s*sra\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (ix+*),e",
  "regex": "^\\s*sra\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (ix+*),h",
  "regex": "^\\s*sra\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (ix+*),l",
  "regex": "^\\s*sra\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (ix+*)",
  "regex": "^\\s*sra\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (ix+*),a",
  "regex": "^\\s*sra\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (ix+*),b",
  "regex": "^\\s*sll\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (ix+*),c",
  "regex": "^\\s*sll\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (ix+*),d",
  "regex": "^\\s*sll\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (ix+*),e",
  "regex": "^\\s*sll\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (ix+*),h",
  "regex": "^\\s*sll\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (ix+*),l",
  "regex": "^\\s*sll\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (ix+*)",
  "regex": "^\\s*sll\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (ix+*),a",
  "regex": "^\\s*sll\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (ix+*),b",
  "regex": "^\\s*srl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (ix+*),c",
  "regex": "^\\s*srl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (ix+*),d",
  "regex": "^\\s*srl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (ix+*),e",
  "regex": "^\\s*srl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (ix+*),h",
  "regex": "^\\s*srl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (ix+*),l",
  "regex": "^\\s*srl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (ix+*)",
  "regex": "^\\s*srl\\s+\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (ix+*),a",
  "regex": "^\\s*srl\\s+\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "bit 0,(ix+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(ix+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(ix+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(ix+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(ix+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(ix+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(ix+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(ix+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(ix+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(ix+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(ix+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(ix+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(ix+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(ix+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(ix+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(ix+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(ix+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(ix+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(ix+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(ix+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(ix+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(ix+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(ix+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(ix+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(ix+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(ix+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(ix+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(ix+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(ix+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(ix+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(ix+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(ix+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(ix+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(ix+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(ix+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(ix+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(ix+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(ix+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(ix+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(ix+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(ix+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(ix+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(ix+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(ix+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(ix+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(ix+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(ix+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(ix+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(ix+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(ix+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(ix+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(ix+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(ix+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(ix+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(ix+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(ix+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(ix+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(ix+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(ix+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(ix+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(ix+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(ix+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(ix+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(ix+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "res 0,(ix+*),b",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(ix+*),c",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(ix+*),d",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(ix+*),e",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(ix+*),h",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(ix+*),l",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(ix+*)",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(ix+*),a",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(ix+*),b",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(ix+*),c",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(ix+*),d",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(ix+*),e",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(ix+*),h",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(ix+*),l",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(ix+*)",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(ix+*),a",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(ix+*),b",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(ix+*),c",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(ix+*),d",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(ix+*),e",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(ix+*),h",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(ix+*),l",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(ix+*)",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(ix+*),a",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(ix+*),b",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(ix+*),c",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(ix+*),d",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(ix+*),e",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(ix+*),h",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(ix+*),l",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(ix+*)",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(ix+*),a",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(ix+*),b",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(ix+*),c",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(ix+*),d",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(ix+*),e",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(ix+*),h",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(ix+*),l",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(ix+*)",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(ix+*),a",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(ix+*),b",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(ix+*),c",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(ix+*),d",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(ix+*),e",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(ix+*),h",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(ix+*),l",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(ix+*)",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(ix+*),a",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(ix+*),b",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(ix+*),c",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(ix+*),d",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(ix+*),e",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(ix+*),h",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(ix+*),l",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(ix+*)",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(ix+*),a",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(ix+*),b",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(ix+*),c",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(ix+*),d",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(ix+*),e",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(ix+*),h",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(ix+*),l",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(ix+*)",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(ix+*),a",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(ix+*),b",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(ix+*),c",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(ix+*),d",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(ix+*),e",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(ix+*),h",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(ix+*),l",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(ix+*)",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(ix+*),a",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(ix+*),b",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(ix+*),c",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(ix+*),d",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(ix+*),e",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(ix+*),h",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(ix+*),l",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(ix+*)",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(ix+*),a",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(ix+*),b",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(ix+*),c",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(ix+*),d",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(ix+*),e",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(ix+*),h",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(ix+*),l",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(ix+*)",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(ix+*),a",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(ix+*),b",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(ix+*),c",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(ix+*),d",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(ix+*),e",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(ix+*),h",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(ix+*),l",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(ix+*)",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(ix+*),a",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(ix+*),b",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(ix+*),c",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(ix+*),d",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(ix+*),e",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(ix+*),h",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(ix+*),l",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(ix+*)",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(ix+*),a",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(ix+*),b",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(ix+*),c",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(ix+*),d",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(ix+*),e",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(ix+*),h",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(ix+*),l",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(ix+*)",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(ix+*),a",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(ix+*),b",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(ix+*),c",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(ix+*),d",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(ix+*),e",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(ix+*),h",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(ix+*),l",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(ix+*)",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(ix+*),a",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(ix+*),b",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(ix+*),c",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(ix+*),d",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(ix+*),e",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(ix+*),h",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(ix+*),l",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(ix+*)",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(ix+*),a",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(ix+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "add iy,bc",
  "regex": "^\\s*add\\s+iy\\s*,\\s*bc\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "add iy,de",
  "regex": "^\\s*add\\s+iy\\s*,\\s*de\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld iy,**",
  "regex": "^\\s*ld\\s+iy\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "14",
  "w": 3
 },
 {
  "case": "ld (**),iy",
  "regex": "^\\s*ld\\s+\\([^\\(\\),]+\\)\\s*,\\s*iy\\s*(;.*)?$",
  "cycles": "20",
  "w": 3
 },
 {
  "case": "inc iy",
  "regex": "^\\s*inc\\s+iy\\s*(;.*)?$",
  "cycles": "10",
  "w": 1
 },
 {
  "case": "inc iyh",
  "regex": "^\\s*inc\\s+iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "dec iyh",
  "regex": "^\\s*dec\\s+iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyh,*",
  "regex": "^\\s*ld\\s+iyh\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "11",
  "w": 2
 },
 {
  "case": "add iy,iy",
  "regex": "^\\s*add\\s+iy\\s*,\\s*iy\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld iy,(**)",
  "regex": "^\\s*ld\\s+iy\\s*,\\s*\\([^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 3
 },
 {
  "case": "dec iy",
  "regex": "^\\s*dec\\s+iy\\s*(;.*)?$",
  "cycles": "10",
  "w": 1
 },
 {
  "case": "inc iyl",
  "regex": "^\\s*inc\\s+iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "dec iyl",
  "regex": "^\\s*dec\\s+iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyl,*",
  "regex": "^\\s*ld\\s+iyl\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "11",
  "w": 2
 },
 {
  "case": "inc (iy+*)",
  "regex": "^\\s*inc\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "dec (iy+*)",
  "regex": "^\\s*dec\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "ld (iy+*),*",
  "regex": "^\\s*ld\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*[^\\(\\),]+\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "add iy,sp",
  "regex": "^\\s*add\\s+iy\\s*,\\s*sp\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "ld b,iyh",
  "regex": "^\\s*ld\\s+b\\s*,\\s*iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld b,iyl",
  "regex": "^\\s*ld\\s+b\\s*,\\s*iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld b,(iy+*)",
  "regex": "^\\s*ld\\s+b\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld c,iyh",
  "regex": "^\\s*ld\\s+c\\s*,\\s*iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld c,iyl",
  "regex": "^\\s*ld\\s+c\\s*,\\s*iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld c,(iy+*)",
  "regex": "^\\s*ld\\s+c\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld d,iyh",
  "regex": "^\\s*ld\\s+d\\s*,\\s*iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld d,iyl",
  "regex": "^\\s*ld\\s+d\\s*,\\s*iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld d,(iy+*)",
  "regex": "^\\s*ld\\s+d\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld e,iyh",
  "regex": "^\\s*ld\\s+e\\s*,\\s*iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld e,iyl",
  "regex": "^\\s*ld\\s+e\\s*,\\s*iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld e,(iy+*)",
  "regex": "^\\s*ld\\s+e\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld iyh,b",
  "regex": "^\\s*ld\\s+iyh\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyh,c",
  "regex": "^\\s*ld\\s+iyh\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyh,d",
  "regex": "^\\s*ld\\s+iyh\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyh,e",
  "regex": "^\\s*ld\\s+iyh\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyh,iyh",
  "regex": "^\\s*ld\\s+iyh\\s*,\\s*iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyh,iyl",
  "regex": "^\\s*ld\\s+iyh\\s*,\\s*iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld h,(iy+*)",
  "regex": "^\\s*ld\\s+h\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld iyh,a",
  "regex": "^\\s*ld\\s+iyh\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyl,b",
  "regex": "^\\s*ld\\s+iyl\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyl,c",
  "regex": "^\\s*ld\\s+iyl\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyl,d",
  "regex": "^\\s*ld\\s+iyl\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyl,e",
  "regex": "^\\s*ld\\s+iyl\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyl,iyh",
  "regex": "^\\s*ld\\s+iyl\\s*,\\s*iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld iyl,iyl",
  "regex": "^\\s*ld\\s+iyl\\s*,\\s*iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld l,(iy+*)",
  "regex": "^\\s*ld\\s+l\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld iyl,a",
  "regex": "^\\s*ld\\s+iyl\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld (iy+*),b",
  "regex": "^\\s*ld\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld (iy+*),c",
  "regex": "^\\s*ld\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld (iy+*),d",
  "regex": "^\\s*ld\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld (iy+*),e",
  "regex": "^\\s*ld\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld (iy+*),h",
  "regex": "^\\s*ld\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld (iy+*),l",
  "regex": "^\\s*ld\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld (iy+*),a",
  "regex": "^\\s*ld\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "ld a,iyh",
  "regex": "^\\s*ld\\s+a\\s*,\\s*iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld a,iyl",
  "regex": "^\\s*ld\\s+a\\s*,\\s*iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld a,(iy+*)",
  "regex": "^\\s*ld\\s+a\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "add a,iyh",
  "regex": "^\\s*add\\s+a\\s*,\\s*iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "add a,iyl",
  "regex": "^\\s*add\\s+a\\s*,\\s*iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "add a,(iy+*)",
  "regex": "^\\s*add\\s+a\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "adc a,iyh",
  "regex": "^\\s*adc\\s+a\\s*,\\s*iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "adc a,iyl",
  "regex": "^\\s*adc\\s+a\\s*,\\s*iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "adc a,(iy+*)",
  "regex": "^\\s*adc\\s+a\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "sub iyh",
  "regex": "^\\s*sub\\s+iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sub iyl",
  "regex": "^\\s*sub\\s+iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sub (iy+*)",
  "regex": "^\\s*sub\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "sbc a,iyh",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sbc a,iyl",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "sbc a,(iy+*)",
  "regex": "^\\s*sbc\\s+a\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "and iyh",
  "regex": "^\\s*and\\s+iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "and iyl",
  "regex": "^\\s*and\\s+iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "and (iy+*)",
  "regex": "^\\s*and\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "xor iyh",
  "regex": "^\\s*xor\\s+iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "xor iyl",
  "regex": "^\\s*xor\\s+iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "xor (iy+*)",
  "regex": "^\\s*xor\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "or iyh",
  "regex": "^\\s*or\\s+iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "or iyl",
  "regex": "^\\s*or\\s+iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "or (iy+*)",
  "regex": "^\\s*or\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "cp iyh",
  "regex": "^\\s*cp\\s+iyh\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "cp iyl",
  "regex": "^\\s*cp\\s+iyl\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "cp (iy+*)",
  "regex": "^\\s*cp\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "19",
  "w": 2
 },
 {
  "case": "pop iy",
  "regex": "^\\s*pop\\s+iy\\s*(;.*)?$",
  "cycles": "14",
  "w": 1
 },
 {
  "case": "ex (sp),iy",
  "regex": "^\\s*ex\\s+\\(sp\\)\\s*,\\s*iy\\s*(;.*)?$",
  "cycles": "23",
  "w": 1
 },
 {
  "case": "push iy",
  "regex": "^\\s*push\\s+iy\\s*(;.*)?$",
  "cycles": "15",
  "w": 1
 },
 {
  "case": "jp (iy)",
  "regex": "^\\s*jp\\s+\\(iy\\)\\s*(;.*)?$",
  "cycles": "8",
  "w": 1
 },
 {
  "case": "ld sp,iy",
  "regex": "^\\s*ld\\s+sp\\s*,\\s*iy\\s*(;.*)?$",
  "cycles": "10",
  "w": 1
 },
 {
  "case": "rlc (iy+*),b",
  "regex": "^\\s*rlc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (iy+*),c",
  "regex": "^\\s*rlc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (iy+*),d",
  "regex": "^\\s*rlc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (iy+*),e",
  "regex": "^\\s*rlc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (iy+*),h",
  "regex": "^\\s*rlc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (iy+*),l",
  "regex": "^\\s*rlc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (iy+*)",
  "regex": "^\\s*rlc\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rlc (iy+*),a",
  "regex": "^\\s*rlc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (iy+*),b",
  "regex": "^\\s*rrc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (iy+*),c",
  "regex": "^\\s*rrc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (iy+*),d",
  "regex": "^\\s*rrc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (iy+*),e",
  "regex": "^\\s*rrc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (iy+*),h",
  "regex": "^\\s*rrc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (iy+*),l",
  "regex": "^\\s*rrc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (iy+*)",
  "regex": "^\\s*rrc\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rrc (iy+*),a",
  "regex": "^\\s*rrc\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (iy+*),b",
  "regex": "^\\s*rl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (iy+*),c",
  "regex": "^\\s*rl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (iy+*),d",
  "regex": "^\\s*rl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (iy+*),e",
  "regex": "^\\s*rl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (iy+*),h",
  "regex": "^\\s*rl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (iy+*),l",
  "regex": "^\\s*rl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (iy+*)",
  "regex": "^\\s*rl\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rl (iy+*),a",
  "regex": "^\\s*rl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (iy+*),b",
  "regex": "^\\s*rr\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (iy+*),c",
  "regex": "^\\s*rr\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (iy+*),d",
  "regex": "^\\s*rr\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (iy+*),e",
  "regex": "^\\s*rr\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (iy+*),h",
  "regex": "^\\s*rr\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (iy+*),l",
  "regex": "^\\s*rr\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (iy+*)",
  "regex": "^\\s*rr\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "rr (iy+*),a",
  "regex": "^\\s*rr\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (iy+*),b",
  "regex": "^\\s*sla\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (iy+*),c",
  "regex": "^\\s*sla\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (iy+*),d",
  "regex": "^\\s*sla\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (iy+*),e",
  "regex": "^\\s*sla\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (iy+*),h",
  "regex": "^\\s*sla\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (iy+*),l",
  "regex": "^\\s*sla\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (iy+*)",
  "regex": "^\\s*sla\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sla (iy+*),a",
  "regex": "^\\s*sla\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (iy+*),b",
  "regex": "^\\s*sra\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (iy+*),c",
  "regex": "^\\s*sra\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (iy+*),d",
  "regex": "^\\s*sra\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (iy+*),e",
  "regex": "^\\s*sra\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (iy+*),h",
  "regex": "^\\s*sra\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (iy+*),l",
  "regex": "^\\s*sra\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (iy+*)",
  "regex": "^\\s*sra\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sra (iy+*),a",
  "regex": "^\\s*sra\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (iy+*),b",
  "regex": "^\\s*sll\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (iy+*),c",
  "regex": "^\\s*sll\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (iy+*),d",
  "regex": "^\\s*sll\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (iy+*),e",
  "regex": "^\\s*sll\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (iy+*),h",
  "regex": "^\\s*sll\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (iy+*),l",
  "regex": "^\\s*sll\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (iy+*)",
  "regex": "^\\s*sll\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "sll (iy+*),a",
  "regex": "^\\s*sll\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (iy+*),b",
  "regex": "^\\s*srl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (iy+*),c",
  "regex": "^\\s*srl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (iy+*),d",
  "regex": "^\\s*srl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (iy+*),e",
  "regex": "^\\s*srl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (iy+*),h",
  "regex": "^\\s*srl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (iy+*),l",
  "regex": "^\\s*srl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (iy+*)",
  "regex": "^\\s*srl\\s+\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "srl (iy+*),a",
  "regex": "^\\s*srl\\s+\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "bit 0,(iy+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(iy+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(iy+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(iy+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(iy+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(iy+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(iy+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 0,(iy+*)",
  "regex": "^\\s*bit\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(iy+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(iy+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(iy+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(iy+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(iy+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(iy+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(iy+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 1,(iy+*)",
  "regex": "^\\s*bit\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(iy+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(iy+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(iy+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(iy+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(iy+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(iy+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(iy+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 2,(iy+*)",
  "regex": "^\\s*bit\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(iy+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(iy+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(iy+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(iy+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(iy+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(iy+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(iy+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 3,(iy+*)",
  "regex": "^\\s*bit\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(iy+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(iy+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(iy+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(iy+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(iy+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(iy+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(iy+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 4,(iy+*)",
  "regex": "^\\s*bit\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(iy+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(iy+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(iy+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(iy+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(iy+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(iy+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(iy+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 5,(iy+*)",
  "regex": "^\\s*bit\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(iy+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(iy+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(iy+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(iy+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(iy+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(iy+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(iy+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 6,(iy+*)",
  "regex": "^\\s*bit\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(iy+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(iy+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(iy+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(iy+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(iy+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(iy+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(iy+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "bit 7,(iy+*)",
  "regex": "^\\s*bit\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "20",
  "w": 2
 },
 {
  "case": "res 0,(iy+*),b",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(iy+*),c",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(iy+*),d",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(iy+*),e",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(iy+*),h",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(iy+*),l",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(iy+*)",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 0,(iy+*),a",
  "regex": "^\\s*res\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(iy+*),b",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(iy+*),c",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(iy+*),d",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(iy+*),e",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(iy+*),h",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(iy+*),l",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(iy+*)",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 1,(iy+*),a",
  "regex": "^\\s*res\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(iy+*),b",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(iy+*),c",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(iy+*),d",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(iy+*),e",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(iy+*),h",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(iy+*),l",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(iy+*)",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 2,(iy+*),a",
  "regex": "^\\s*res\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(iy+*),b",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(iy+*),c",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(iy+*),d",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(iy+*),e",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(iy+*),h",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(iy+*),l",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(iy+*)",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 3,(iy+*),a",
  "regex": "^\\s*res\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(iy+*),b",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(iy+*),c",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(iy+*),d",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(iy+*),e",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(iy+*),h",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(iy+*),l",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(iy+*)",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 4,(iy+*),a",
  "regex": "^\\s*res\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(iy+*),b",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(iy+*),c",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(iy+*),d",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(iy+*),e",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(iy+*),h",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(iy+*),l",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(iy+*)",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 5,(iy+*),a",
  "regex": "^\\s*res\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(iy+*),b",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(iy+*),c",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(iy+*),d",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(iy+*),e",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(iy+*),h",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(iy+*),l",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(iy+*)",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 6,(iy+*),a",
  "regex": "^\\s*res\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(iy+*),b",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(iy+*),c",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(iy+*),d",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(iy+*),e",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(iy+*),h",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(iy+*),l",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(iy+*)",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "res 7,(iy+*),a",
  "regex": "^\\s*res\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(iy+*),b",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(iy+*),c",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(iy+*),d",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(iy+*),e",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(iy+*),h",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(iy+*),l",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(iy+*)",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 0,(iy+*),a",
  "regex": "^\\s*set\\s+0\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(iy+*),b",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(iy+*),c",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(iy+*),d",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(iy+*),e",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(iy+*),h",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(iy+*),l",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(iy+*)",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 1,(iy+*),a",
  "regex": "^\\s*set\\s+1\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(iy+*),b",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(iy+*),c",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(iy+*),d",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(iy+*),e",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(iy+*),h",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(iy+*),l",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(iy+*)",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 2,(iy+*),a",
  "regex": "^\\s*set\\s+2\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(iy+*),b",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(iy+*),c",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(iy+*),d",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(iy+*),e",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(iy+*),h",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(iy+*),l",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(iy+*)",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 3,(iy+*),a",
  "regex": "^\\s*set\\s+3\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(iy+*),b",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(iy+*),c",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(iy+*),d",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(iy+*),e",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(iy+*),h",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(iy+*),l",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(iy+*)",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 4,(iy+*),a",
  "regex": "^\\s*set\\s+4\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(iy+*),b",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(iy+*),c",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(iy+*),d",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(iy+*),e",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(iy+*),h",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(iy+*),l",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(iy+*)",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 5,(iy+*),a",
  "regex": "^\\s*set\\s+5\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(iy+*),b",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(iy+*),c",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(iy+*),d",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(iy+*),e",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(iy+*),h",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(iy+*),l",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(iy+*)",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 6,(iy+*),a",
  "regex": "^\\s*set\\s+6\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(iy+*),b",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*b\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(iy+*),c",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*c\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(iy+*),d",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*d\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(iy+*),e",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*e\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(iy+*),h",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*h\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(iy+*),l",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*l\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(iy+*)",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 },
 {
  "case": "set 7,(iy+*),a",
  "regex": "^\\s*set\\s+7\\s*,\\s*\\(iy+[^\\(\\),]+\\)\\s*,\\s*a\\s*(;.*)?$",
  "cycles": "23",
  "w": 2
 }
]
